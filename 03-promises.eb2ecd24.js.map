{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACbC,KAAOC,SAASC,cAAc,SAC9BC,SAAWF,SAASC,cAAc,UAClCE,MAAOH,SAASC,cAAc,uBAC9BG,KAAMJ,SAASC,cAAc,sBAC7BI,OAAQL,SAASC,cAAc,yBAS/B,SAASK,EAAcC,EAAUJ,GAW/B,OAVgB,IAAIK,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAEzBJ,EAAQ,CAAEF,WAAUJ,S,GAIrBA,E,IAfPL,EAAKC,KAAKe,iBAAiB,UAsB3B,SAA6BC,GAC3BA,EAAIC,iBAON,IANE,IAAMC,EAAcC,OAAOpB,EAAKK,MAAMgB,OAChCC,EAAYF,OAAOpB,EAAKM,KAAKe,OAC7BE,EAAcH,OAAOpB,EAAKO,OAAOc,OAGrCG,EAAWL,EACPM,EAAI,EAAGA,GAAKF,EAAaE,IAEjCjB,EAAciB,EADZD,GAAYF,GAEXI,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUJ,EAAKsB,EAALtB,MACnBuB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAAN1B,EAAM,M,IAErE2B,OAAM,SAAAL,G,IAAEM,EAAKN,EAALM,MACRL,EAAA9B,GAAS+B,OAAOK,QAAQ,sBAA2CH,OAArBE,EAAMxB,SAAS,QAAkBsB,OAAZE,EAAM5B,MAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\nform : document.querySelector('.form'),\nbuttonSb : document.querySelector('button'),\ndelay: document.querySelector('input[name=\"delay\"]'),\nstep: document.querySelector('input[name=\"step\"]'),\namount: document.querySelector('input[name=\"amount\"]'),\n \n};\nrefs.form.addEventListener('submit', handlebuttonSbClick)\n\n\n\n\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        resolve({ position, delay })\n      }\n    }, delay\n  )})\n  return promise;\n\n}\n\n\nfunction handlebuttonSbClick(evt) {\n  evt.preventDefault();\n  const firstDelay  = Number(refs.delay.value);\n  const firststep = Number(refs.step.value);\n  const firstamount = Number(refs.amount.value);\n\n\nlet delayNew = firstDelay;\nfor(let i = 1; i <= firstamount; i++ ) {\n  delayNew += firststep\ncreatePromise(i, delayNew)\n  .then(({ position, delay }) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({error}) => {\n   Notiflix.Notify.failure(`❌ Rejected promise ${error.position} in ${error.delay}ms`);\n  });\n}\n \n}\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","buttonSb","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","firstDelay","Number","value","firststep","firstamount","delayNew","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","error","failure"],"version":3,"file":"03-promises.eb2ecd24.js.map"}